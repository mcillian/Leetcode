/***
给定一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？找出所有满足条件且不重复的三元组。

注意：答案中不可以包含重复的三元组。

例如, 给定数组 nums = [-1, 0, 1, 2, -1, -4]，

满足要求的三元组集合为：
[
  [-1, 0, 1],
  [-1, -1, 2]
]
***/

//
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> res;
        //set<vector<int>> st;
        sort(nums.begin(),nums.end());
        //if(nums.size() == 0 || nums[0] > 0 || nums[nums.size() - 1] < 0)
         //   return {};
        for(int k = 0;k < nums.size() - 2; k++){
            if(nums[k] > 0) break;
            if (k > 0 && nums[k] == nums[k - 1]) continue; 
            int target = 0 - nums[k];
            int i = k + 1, j = nums.size() - 1;
            while(i < j){
                if(nums[i] + nums[j] == target){
                    res.push_back({nums[k],nums[i],nums[j]});
                    while(i < j && nums[i] == nums[i + 1]) i++;
                    while(i < j && nums[j] == nums[j - 1]) j--;
                    i++;
                    j--;
                }else if(nums[i] + nums[j] < target){
                    i++;
                }else{
                    j--;
                }
            }
        }
        set<vector<int>> st(res.begin(),res.end());
        res.assign(st.begin(),st.end());
        return res;
    }
};
//
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        set<vector<int>> S;
        for(int i = 0; i < nums.size(); ++i){
            vector<int> tmp;
            int l = 0, r = nums.size() - 1;
            while(l < r){
                if(l == i) {break;}
                if(r == i) {break;}
                if(nums[l] + nums[r] + nums[i] == 0){
                    vector<int> tmp = {nums[l],nums[i],nums[r]};
                    S.insert(tmp); ++l; --r;
                }else if(nums[l] + nums[r] + nums[i] < 0){
                    ++l;
                }else --r;
            }
        }
        vector<vector<int>> res(S.begin(), S.end());
        return res;
    }
};
