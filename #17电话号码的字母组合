/***
给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。
给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。
示例:
输入："23"
输出：["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"].
说明:
尽管上面的答案是按字典序排列的，但是你可以任意选择答案输出的顺序。
***/
class Solution {
public:
    vector<string> letterCombinations(string digits) {
        unordered_map<char,string> table{
            {'0'," "}, {'1', "*"}, {'2', "abc"},
            {'3', "def"}, {'4', "ghi"}, {'5', "jkl"},
            {'6', "mno"}, {'7', "pqrs"}, {'8', "tuv"},
            {'9', "wxyz"}
        };
        vector<string> res;
        if(digits == "") return res;
        generate(res, "", digits, table, 0);
        return res;
    }
    void generate(vector<string> &res, string str, string &digits, unordered_map<char, string> &m,int k){
        if(str.size() == digits.size()){
            res.push_back(str);
            return;
        }
        string temp = m[digits[k]];
        for(char w: temp){
            str += w;
            generate(res, str, digits, m, k + 1);
            str.pop_back();
        }
        return;
    }
};
