/***
给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。

你可以假设数组中无重复元素。

示例 1:

输入: [1,3,5,6], 5
输出: 2
示例 2:

输入: [1,3,5,6], 2
输出: 1
示例 3:

输入: [1,3,5,6], 7
输出: 4
示例 4:

输入: [1,3,5,6], 0
输出: 0
**/
class Solution(object):
    def searchInsert(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """

        left = 0
        right = len(nums) - 1
        mid = int((right - left) / 2)
        while left <= right and left >= 0 and right >= 0:
            if target == nums[mid]:
                return mid
            elif target < nums[mid]:
                right = mid - 1
            else:
                left = mid + 1
            mid = int((left + right) / 2)

        mid = mid + 1 if target > nums[mid] else mid
        mid = 0 if mid < 0 else mid
        
        return mid
        
def searchInsert(self, nums, target):
    nums.append(target)
    nums.sort()
    
    return nums.index(target)
